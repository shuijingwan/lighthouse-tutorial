"A date string with format `Y-m-d`, e.g. `2011-05-23`."
scalar Date @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\Date")

"A datetime string with format `Y-m-d H:i:s`, e.g. `2018-05-23 13:43:32`."
scalar DateTime @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\DateTime")

type Query {
    hello: String!
    greet(name: String = "you"): String
    users: [User!]! @paginate(defaultCount: 10, scopes: ["verified"])
    user(id: ID @eq): User @find
    posts: [Post!]! @all
    post(id: Int! @eq): Post @find
    images: [Image!]! @all
}

type Mutation {
    createPost(input: CreatePostInput! @spread): Post @create
    updateUser(id: ID!, name: String): User @update
    upsertUser(id: ID!, name: String!, email: String): User @upsert
    deleteUser(id: ID!): User @delete
    updatePost(input: UpdatePostInput! @spread): Post @update
}

type User {
    id: ID!
    name: String!
    email: String!
    created_at: DateTime!
    updated_at: DateTime!
    posts: [Post!]! @hasMany
    image: Image @morphOne
}

type Post {
    id: ID!
    title: String!
    content: String!
    author: User! @belongsTo(relation: "user")
    comments: [Comment!]! @morphMany
    image: Image! @morphOne
}

type Video {
    id: ID!
    title: String!
    url: String!
    comments: [Comment!]! @morphMany
}

type Comment {
    id: ID!
    reply: String!
    commentable: Commentable! @morphTo
}

type Image {
    id: ID!
    url: String!
    imageable: Imageable! @morphTo
}

input CreatePostInput {
    title: String!
    content: String!
    author: CreateUserBelongsTo
}

input UpdatePostInput {
    id: ID!
    title: String
    author: UpdateUserBelongsTo
}

input CreateUserBelongsTo {
    connect: ID
    create: CreateUserInput
}

input CreateUserInput {
    name: String!
    email: String!
    password: String!
}

input UpdateUserInput {
    name: String!
    email: String
}

input UpdateUserBelongsTo {
    connect: ID
    create: CreateUserInput
    update: UpdateUserInput
    upsert: UpdateUserInput
    disconnect: Boolean
    delete: Boolean
}

union Imageable = Post | User
union Commentable = Post | Video
